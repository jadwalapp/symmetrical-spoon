// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: whatsapp/v1/whatsapp.proto

package whatsappv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/jadwalapp/symmetrical-spoon/falak/pkg/gen/proto/whatsapp/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// ProfileServiceName is the fully-qualified name of the ProfileService service.
	ProfileServiceName = "whatsapp.v1.ProfileService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ProfileServiceInitiateConnectWhatsappAccountProcedure is the fully-qualified name of the
	// ProfileService's InitiateConnectWhatsappAccount RPC.
	ProfileServiceInitiateConnectWhatsappAccountProcedure = "/whatsapp.v1.ProfileService/InitiateConnectWhatsappAccount"
	// ProfileServiceCompleteConnectWhatsappAccountProcedure is the fully-qualified name of the
	// ProfileService's CompleteConnectWhatsappAccount RPC.
	ProfileServiceCompleteConnectWhatsappAccountProcedure = "/whatsapp.v1.ProfileService/CompleteConnectWhatsappAccount"
	// ProfileServiceRemoveWhatsappAccountConnectionProcedure is the fully-qualified name of the
	// ProfileService's RemoveWhatsappAccountConnection RPC.
	ProfileServiceRemoveWhatsappAccountConnectionProcedure = "/whatsapp.v1.ProfileService/RemoveWhatsappAccountConnection"
	// ProfileServiceGetWhatsappAccountProcedure is the fully-qualified name of the ProfileService's
	// GetWhatsappAccount RPC.
	ProfileServiceGetWhatsappAccountProcedure = "/whatsapp.v1.ProfileService/GetWhatsappAccount"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	profileServiceServiceDescriptor                               = v1.File_whatsapp_v1_whatsapp_proto.Services().ByName("ProfileService")
	profileServiceInitiateConnectWhatsappAccountMethodDescriptor  = profileServiceServiceDescriptor.Methods().ByName("InitiateConnectWhatsappAccount")
	profileServiceCompleteConnectWhatsappAccountMethodDescriptor  = profileServiceServiceDescriptor.Methods().ByName("CompleteConnectWhatsappAccount")
	profileServiceRemoveWhatsappAccountConnectionMethodDescriptor = profileServiceServiceDescriptor.Methods().ByName("RemoveWhatsappAccountConnection")
	profileServiceGetWhatsappAccountMethodDescriptor              = profileServiceServiceDescriptor.Methods().ByName("GetWhatsappAccount")
)

// ProfileServiceClient is a client for the whatsapp.v1.ProfileService service.
type ProfileServiceClient interface {
	InitiateConnectWhatsappAccount(context.Context, *connect.Request[v1.InitiateConnectWhatsappAccountRequest]) (*connect.Response[v1.InitiateConnectWhatsappAccountResponse], error)
	CompleteConnectWhatsappAccount(context.Context, *connect.Request[v1.CompleteConnectWhatsappAccountRequest]) (*connect.Response[v1.CompleteConnectWhatsappAccountResponse], error)
	// possible errors:
	//   - not found
	RemoveWhatsappAccountConnection(context.Context, *connect.Request[v1.RemoveWhatsappAccountConnectionRequest]) (*connect.Response[v1.RemoveWhatsappAccountConnectionResponse], error)
	// possible errors:
	//   - not found
	GetWhatsappAccount(context.Context, *connect.Request[v1.GetWhatsappAccountRequest]) (*connect.Response[v1.GetWhatsappAccountResponse], error)
}

// NewProfileServiceClient constructs a client for the whatsapp.v1.ProfileService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewProfileServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) ProfileServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &profileServiceClient{
		initiateConnectWhatsappAccount: connect.NewClient[v1.InitiateConnectWhatsappAccountRequest, v1.InitiateConnectWhatsappAccountResponse](
			httpClient,
			baseURL+ProfileServiceInitiateConnectWhatsappAccountProcedure,
			connect.WithSchema(profileServiceInitiateConnectWhatsappAccountMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		completeConnectWhatsappAccount: connect.NewClient[v1.CompleteConnectWhatsappAccountRequest, v1.CompleteConnectWhatsappAccountResponse](
			httpClient,
			baseURL+ProfileServiceCompleteConnectWhatsappAccountProcedure,
			connect.WithSchema(profileServiceCompleteConnectWhatsappAccountMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		removeWhatsappAccountConnection: connect.NewClient[v1.RemoveWhatsappAccountConnectionRequest, v1.RemoveWhatsappAccountConnectionResponse](
			httpClient,
			baseURL+ProfileServiceRemoveWhatsappAccountConnectionProcedure,
			connect.WithSchema(profileServiceRemoveWhatsappAccountConnectionMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getWhatsappAccount: connect.NewClient[v1.GetWhatsappAccountRequest, v1.GetWhatsappAccountResponse](
			httpClient,
			baseURL+ProfileServiceGetWhatsappAccountProcedure,
			connect.WithSchema(profileServiceGetWhatsappAccountMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// profileServiceClient implements ProfileServiceClient.
type profileServiceClient struct {
	initiateConnectWhatsappAccount  *connect.Client[v1.InitiateConnectWhatsappAccountRequest, v1.InitiateConnectWhatsappAccountResponse]
	completeConnectWhatsappAccount  *connect.Client[v1.CompleteConnectWhatsappAccountRequest, v1.CompleteConnectWhatsappAccountResponse]
	removeWhatsappAccountConnection *connect.Client[v1.RemoveWhatsappAccountConnectionRequest, v1.RemoveWhatsappAccountConnectionResponse]
	getWhatsappAccount              *connect.Client[v1.GetWhatsappAccountRequest, v1.GetWhatsappAccountResponse]
}

// InitiateConnectWhatsappAccount calls whatsapp.v1.ProfileService.InitiateConnectWhatsappAccount.
func (c *profileServiceClient) InitiateConnectWhatsappAccount(ctx context.Context, req *connect.Request[v1.InitiateConnectWhatsappAccountRequest]) (*connect.Response[v1.InitiateConnectWhatsappAccountResponse], error) {
	return c.initiateConnectWhatsappAccount.CallUnary(ctx, req)
}

// CompleteConnectWhatsappAccount calls whatsapp.v1.ProfileService.CompleteConnectWhatsappAccount.
func (c *profileServiceClient) CompleteConnectWhatsappAccount(ctx context.Context, req *connect.Request[v1.CompleteConnectWhatsappAccountRequest]) (*connect.Response[v1.CompleteConnectWhatsappAccountResponse], error) {
	return c.completeConnectWhatsappAccount.CallUnary(ctx, req)
}

// RemoveWhatsappAccountConnection calls whatsapp.v1.ProfileService.RemoveWhatsappAccountConnection.
func (c *profileServiceClient) RemoveWhatsappAccountConnection(ctx context.Context, req *connect.Request[v1.RemoveWhatsappAccountConnectionRequest]) (*connect.Response[v1.RemoveWhatsappAccountConnectionResponse], error) {
	return c.removeWhatsappAccountConnection.CallUnary(ctx, req)
}

// GetWhatsappAccount calls whatsapp.v1.ProfileService.GetWhatsappAccount.
func (c *profileServiceClient) GetWhatsappAccount(ctx context.Context, req *connect.Request[v1.GetWhatsappAccountRequest]) (*connect.Response[v1.GetWhatsappAccountResponse], error) {
	return c.getWhatsappAccount.CallUnary(ctx, req)
}

// ProfileServiceHandler is an implementation of the whatsapp.v1.ProfileService service.
type ProfileServiceHandler interface {
	InitiateConnectWhatsappAccount(context.Context, *connect.Request[v1.InitiateConnectWhatsappAccountRequest]) (*connect.Response[v1.InitiateConnectWhatsappAccountResponse], error)
	CompleteConnectWhatsappAccount(context.Context, *connect.Request[v1.CompleteConnectWhatsappAccountRequest]) (*connect.Response[v1.CompleteConnectWhatsappAccountResponse], error)
	// possible errors:
	//   - not found
	RemoveWhatsappAccountConnection(context.Context, *connect.Request[v1.RemoveWhatsappAccountConnectionRequest]) (*connect.Response[v1.RemoveWhatsappAccountConnectionResponse], error)
	// possible errors:
	//   - not found
	GetWhatsappAccount(context.Context, *connect.Request[v1.GetWhatsappAccountRequest]) (*connect.Response[v1.GetWhatsappAccountResponse], error)
}

// NewProfileServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewProfileServiceHandler(svc ProfileServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	profileServiceInitiateConnectWhatsappAccountHandler := connect.NewUnaryHandler(
		ProfileServiceInitiateConnectWhatsappAccountProcedure,
		svc.InitiateConnectWhatsappAccount,
		connect.WithSchema(profileServiceInitiateConnectWhatsappAccountMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	profileServiceCompleteConnectWhatsappAccountHandler := connect.NewUnaryHandler(
		ProfileServiceCompleteConnectWhatsappAccountProcedure,
		svc.CompleteConnectWhatsappAccount,
		connect.WithSchema(profileServiceCompleteConnectWhatsappAccountMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	profileServiceRemoveWhatsappAccountConnectionHandler := connect.NewUnaryHandler(
		ProfileServiceRemoveWhatsappAccountConnectionProcedure,
		svc.RemoveWhatsappAccountConnection,
		connect.WithSchema(profileServiceRemoveWhatsappAccountConnectionMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	profileServiceGetWhatsappAccountHandler := connect.NewUnaryHandler(
		ProfileServiceGetWhatsappAccountProcedure,
		svc.GetWhatsappAccount,
		connect.WithSchema(profileServiceGetWhatsappAccountMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/whatsapp.v1.ProfileService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ProfileServiceInitiateConnectWhatsappAccountProcedure:
			profileServiceInitiateConnectWhatsappAccountHandler.ServeHTTP(w, r)
		case ProfileServiceCompleteConnectWhatsappAccountProcedure:
			profileServiceCompleteConnectWhatsappAccountHandler.ServeHTTP(w, r)
		case ProfileServiceRemoveWhatsappAccountConnectionProcedure:
			profileServiceRemoveWhatsappAccountConnectionHandler.ServeHTTP(w, r)
		case ProfileServiceGetWhatsappAccountProcedure:
			profileServiceGetWhatsappAccountHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedProfileServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedProfileServiceHandler struct{}

func (UnimplementedProfileServiceHandler) InitiateConnectWhatsappAccount(context.Context, *connect.Request[v1.InitiateConnectWhatsappAccountRequest]) (*connect.Response[v1.InitiateConnectWhatsappAccountResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("whatsapp.v1.ProfileService.InitiateConnectWhatsappAccount is not implemented"))
}

func (UnimplementedProfileServiceHandler) CompleteConnectWhatsappAccount(context.Context, *connect.Request[v1.CompleteConnectWhatsappAccountRequest]) (*connect.Response[v1.CompleteConnectWhatsappAccountResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("whatsapp.v1.ProfileService.CompleteConnectWhatsappAccount is not implemented"))
}

func (UnimplementedProfileServiceHandler) RemoveWhatsappAccountConnection(context.Context, *connect.Request[v1.RemoveWhatsappAccountConnectionRequest]) (*connect.Response[v1.RemoveWhatsappAccountConnectionResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("whatsapp.v1.ProfileService.RemoveWhatsappAccountConnection is not implemented"))
}

func (UnimplementedProfileServiceHandler) GetWhatsappAccount(context.Context, *connect.Request[v1.GetWhatsappAccountRequest]) (*connect.Response[v1.GetWhatsappAccountResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("whatsapp.v1.ProfileService.GetWhatsappAccount is not implemented"))
}
