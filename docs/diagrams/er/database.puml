@startuml Database Design

!define table(x) entity x << (T,#7A8D3A) >>
!define primary_key(x) <u>x</u>
!define foreign_key(x) #x#

skinparam linetype ortho
skinparam roundcorner 5
skinparam class {
    BackgroundColor White
    BorderColor Black
    ArrowColor Black
}

table(customer) {
    primary_key(id): UUID <<PK>>
    name: VARCHAR(100)
    email: VARCHAR(320)
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(auth_google) {
    primary_key(id): UUID <<PK>>
    foreign_key(customer_id): UUID <<FK>>
    sub: TEXT
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(magic_link) {
    primary_key(id): UUID <<PK>>
    foreign_key(customer_id): UUID <<FK>>
    token_hash: CHAR(44)
    expires_at: TIMESTAMPTZ
    used_at: TIMESTAMPTZ
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(calendar_accounts) {
    primary_key(id): UUID <<PK>>
    foreign_key(customer_id): UUID <<FK>>
    provider: VARCHAR
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(vcalendar) {
    primary_key(uid): VARCHAR <<PK>>
    foreign_key(account_id): UUID <<FK>>
    prodid: VARCHAR
    version: VARCHAR
    display_name: VARCHAR
    description: TEXT
    color: VARCHAR(7)
    timezone: VARCHAR
    sequence: INTEGER
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(vevent) {
    primary_key(uid): VARCHAR <<PK>>
    foreign_key(calendar_uid): VARCHAR <<FK>>
    dtstamp: TIMESTAMPTZ
    dtstart: TIMESTAMPTZ
    dtend: TIMESTAMPTZ
    duration: VARCHAR
    summary: VARCHAR
    description: TEXT
    location: VARCHAR
    status: VARCHAR
    classification: VARCHAR
    transp: VARCHAR
    rrule: VARCHAR
    rdate: JSONB
    exdate: JSONB
    sequence: INTEGER
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(vevent_exception) {
    primary_key(id): UUID <<PK>>
    foreign_key(event_uid): VARCHAR <<FK>>
    recurrence_id: TIMESTAMPTZ
    summary: VARCHAR
    description: TEXT
    location: VARCHAR
    dtstart: TIMESTAMPTZ
    dtend: TIMESTAMPTZ
    status: VARCHAR
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

table(valarm) {
    primary_key(id): UUID <<PK>>
    foreign_key(event_uid): VARCHAR <<FK>>
    action: VARCHAR
    trigger: VARCHAR
    description: TEXT
    summary: VARCHAR
    duration: VARCHAR
    repeat: INTEGER
    attendees: JSONB
    --
    created_at: TIMESTAMPTZ
    updated_at: TIMESTAMPTZ
}

' Relationships
customer ||--o| auth_google : has
customer ||--o{ magic_link : uses
customer ||--o{ calendar_accounts : owns
calendar_accounts ||--o{ vcalendar : contains
vcalendar ||--o{ vevent : schedules
vevent ||--o{ vevent_exception : "has exceptions"
vevent ||--o{ valarm : "has alarms"

@enduml